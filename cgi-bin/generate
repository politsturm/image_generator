#!/usr/bin/env python

from common import get_args

import cairo
import requests
import base64
import sys

from wand.api import library
import wand.color
import wand.image

def generate_svg(template_name, img_url, text):
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.75 Safari/537.36'
    }
    response = requests.get(img_url, headers=headers)

    img_type = response.headers['Content-Type']
    data = base64.encodebytes(response.content).decode()
    uri = "data:{};base64,{}".format(img_type, data)

    template = template_name + '.svg';
    with open(template, 'r') as f:
        svg = f.read().replace('%TEXT%', text).replace('%IMAGE%', uri)
        return svg

def svg_to_png(svg):
    with wand.image.Image() as image:
        with wand.color.Color('transparent') as background_color:
            library.MagickSetBackgroundColor(image.wand,
                                             background_color.resource)
        image.read(blob=svg.encode('utf-8'))
        png_image = image.make_blob("png32")
        return png_image

args = get_args()
if args['cgi']:
    print("Content-type: text/html")
    #print("Content-type: image/html")
    print()

img_url = args['url'];
template_name = args['template']
text = args['text'];
svg = generate_svg(template_name, img_url, text)
print(svg)
#png = svg_to_png(svg)
#sys.stdout.buffer.write(png)
